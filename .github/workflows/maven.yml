name: CI/CD Spring Boot avec Render

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      # Docker service pour Testcontainers
      docker:
        image: docker:24.0
        options: --privileged

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: üì• Checkout du code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Java 21 + Maven
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3Ô∏è‚É£ V√©rification des secrets
      - name: üîí V√©rification des secrets
        run: |
          if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "ERROR: RENDER_SERVICE_ID n'est pas d√©fini !"
            exit 1
          fi
          if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
            echo "ERROR: RENDER_API_KEY n'est pas d√©fini !"
            exit 1
          fi

      # 4Ô∏è‚É£ Maven build + tests avec Testcontainers
      - name: Maven build + tests
        run: mvn clean verify -Dspring.profiles.active=test

      # 5Ô∏è‚É£ Build Dockerfile pour Render (skip tests)
      - name: Build Docker image
        run: docker build -t myapp --target runtime .

      # 6Ô∏è‚É£ Installer CA certificates pour curl HTTPS
      - name: Installer CA certificates
        run: sudo apt-get update && sudo apt-get install -y ca-certificates

      # 7Ô∏è‚É£ D√©ploiement Render
      - name: üöÄ D√©clencher le d√©ploiement Render
        run: |
          curl -v -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
