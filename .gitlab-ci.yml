stages:
  - build
  - test
  - analyse
  - deploy

# DinD service pour Testcontainers si besoin
services:
  - name: docker:dind
    command: ["--tls=false"]

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
 
# Compilation
build-app:
  stage: build
  image: maven:3-eclipse-temurin-21
  script:
    - mvn clean compile
  cache:
    key:
      files:
        - pom.xml
    paths:
      - .m2/repository
  artifacts:
    paths:
      - target/

# Tests
test-maven:
  stage: test
  image: maven:3-eclipse-temurin-21
  script:
    - mvn test -Dspring.profiles.active=test
  variables:
    POSTGRES_DB: testdb
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test

  services:
    - name: postgres:17
  cache:
    key:
      files:
        - pom.xml
    paths:
      - .m2/repository
  artifacts:
    paths:
      - target/
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

# Analyse Sonar apr√®s compilation et tests
sonarcloud-check:
  stage: analyse
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - sonar-scanner
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  needs:
    - build-app
    - test-maven
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|develop)$/ || $CI_MERGE_REQUEST_ID'
      when: always
